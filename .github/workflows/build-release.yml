name: Build with RMPP Toolchain and Upload Release

on:
    push:
        tags:
          - '*'

jobs:
  build:
    strategy:
      matrix:
        os: ["eeems/remarkable-toolchain:latest-rmpp", "eeems/remarkable-toolchain:latest-rm2"]
        include:
          - os: "eeems/remarkable-toolchain:latest-rmpp"
            file_name: xovi-aarch64.so
          - os: "eeems/remarkable-toolchain:latest-rm2"
            file_name: xovi-arm32.so
    runs-on: ubuntu-latest

    container:
        image: ${{ matrix.os }}

    steps:
        - name: Checkout Code
          uses: actions/checkout@v3

        - name: Install CMake
          run: |
            apt-get update
            apt-get install -y cmake

        - name: Build Application
          shell: bash
          run: |
            . /opt/codex/*/*/environment-setup-*
            mkdir build
            cd build
            cmake ..
            make -j$(nproc)

        - name: Upload artifacts
          uses: actions/upload-artifact@v4
          with:
            name: ${{ matrix.file_name }}
            path: build/xovi.so
  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
        - name: Download Build Artifacts
          uses: actions/download-artifact@v4
          with:
            path: ./

        - name: Create Release
          uses: actions/create-release@v1
          id: create_release_step
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            draft: false
            prerelease: false
            release_name: ${{ github.event.release.tag_name }}
            tag_name: ${{ github.ref }}

        - name: Upload Release Assets
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release_step.outputs.upload_url }}
            asset_path: xovi-aarch64.so/xovi.so
            asset_name: xovi-aarch64.so
            asset_content_type: application/octet-stream

        - name: Upload Release Assets (ARM32)
          uses: actions/upload-release-asset@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          with:
            upload_url: ${{ steps.create_release_step.outputs.upload_url }}
            asset_path: xovi-arm32.so/xovi.so
            asset_name: xovi-arm32.so
            asset_content_type: application/octet-stream
